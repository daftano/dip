#####################################################
# minidip.conf
#
# This is the MiniDIP sample configuration file.
#
# See COPYING for licensing information.
#
#####################################################

# Parameter values accumulate
#   parm = value1
#   parm = value2
# is the same as
#   parm = value1 value2

# default BIND nsupdate command 
#nsupdate = /usr/local/gnudip/sbin/gdipnsupd.sh
#  uncomment the line above to trap nsupdate using the sample script
#nsupdate = /usr/local/gnudip/sbin/multinsupd.pl
#  uncomment the line above to trap nsupdate for alias processing
# BIND 8
#nsupdate = /usr/bin/nsupdate -v -k /usr/local/gnudip/etc:gnudip-key.
# BIND 9
nsupdate = /usr/local/bind/bin/nsupdate -v
nsupdate = -k /usr/local/gnudip/etc/Kgnudip-key.+157+36000.private

# BIND nsupdate command for specific domain do.main
# - at either user or domain level
#nsupdate.do.main = /usr/bin/nsupdate -v
#nsupdate.do.main = -k /usr/local/gnudip/etc/Kgnudip-key.+157+36000.private

# use backend for dyn3.yourhost.com
#nsupdate.dyn3.yourhost.com = /usr/local/gnudip/sbin/gdipbkclt.pl oldBIND.dyn3

# default TTL value for zone records added with nsupdate
#   defaults to zero if not present
#TTL = 0

# TTL value for domain do.main
# - at either user or domain level
#TTL.do.main = 10

# logger command
logger = /usr/bin/logger -t gnudip-mini

# seconds to wait for response to salt prompt
timeout = 10

# logger command for cgi script
logger_cgi = /usr/bin/logger -t minidip-cgi

# life span in seconds of HTTP update salt prompt
timeout_cgi = 60

# passwords
PSWD.tester.dyn.yourhost.com = testpass

# list of acceptabe and unacceptable IP networks
# - network/netmask format
#   (e.g. 0.0.0.0/0.0.0.0 means any)
# - "/netmask" is optional; defaults to "/255.255.255.255"
# - seperated by spaces, or on seperate lines
# - prepend "!" for "unacceptable", with no space after
#   (e.g. !207.46.230.218 means not microsoft.com)
networks = 0.0.0.0/0.0.0.0
#networks = 127.0.0.1
#networks = 192.168.0.0/255.255.255.0

# require IP address to be sent for update request type 0
# - Legacy GnuDIP did not include the IP address in the
#   type 0 message. The current server will revert to the
#   legacy behaviour unless "require_address" is set to "yes".
#   A message is written to the log though.
# - Because the legacy client has other shortcomings, if
#   possible you should say "yes" here to stop it from being
#   used.
#require_address = yes

# User pattern, domain and password for "dummy" hosts.
# - For type 2 update requests with a user matching this pattern, and
# - a domain and password matching this domain and password, the
# - update servers will just send back the type 2 response with the IP
# - address the server sees the client at.
# - In the user pattern:
# -   "?" matches any one character
# -   "*" matches zero or more characters
#dummyuser = dummy*
#dummydomn = dummy
#dummypswd = dummy

